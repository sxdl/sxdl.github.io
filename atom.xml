<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>随苑-我的个人小站</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://sxdl.github.io/"/>
  <updated>2021-06-19T12:35:07.398Z</updated>
  <id>http://sxdl.github.io/</id>
  
  <author>
    <name>碎星抖落</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>应用化学与技能竞赛知识点</title>
    <link href="http://sxdl.github.io/2021/06/18/%E5%8C%96%E5%AD%A6-%E5%BA%94%E7%94%A8%E5%8C%96%E5%AD%A6%E4%B8%8E%E6%8A%80%E8%83%BD%E7%AB%9E%E8%B5%9B%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    <id>http://sxdl.github.io/2021/06/18/%E5%8C%96%E5%AD%A6-%E5%BA%94%E7%94%A8%E5%8C%96%E5%AD%A6%E4%B8%8E%E6%8A%80%E8%83%BD%E7%AB%9E%E8%B5%9B%E7%9F%A5%E8%AF%86%E7%82%B9/</id>
    <published>2021-06-18T15:09:42.000Z</published>
    <updated>2021-06-19T12:35:07.398Z</updated>
    
    <content type="html"><![CDATA[<h1 id="应用化学与技能竞赛知识点"><a href="#应用化学与技能竞赛知识点" class="headerlink" title="应用化学与技能竞赛知识点"></a>应用化学与技能竞赛知识点</h1><h2 id="一、环境化学"><a href="#一、环境化学" class="headerlink" title="一、环境化学"></a>一、环境化学</h2><h3 id="1、人工降雨"><a href="#1、人工降雨" class="headerlink" title="1、人工降雨"></a>1、人工降雨</h3><blockquote><p><a href="https://wenku.baidu.com/link?url=S-SVpxnNo5CCcfizQ9JIzVsGFQyTJhsK8cXhyaTt6Oc3Q-Ow9AKpOVW6KJS9LaV7TQ4JLJC3AM8btKgzw68gdDsjLdLSG__EjIJPy5Ld3v0FAIWUnH3bLbmQRqn-yoZM" target="_blank" rel="noopener">干冰和碘化银人工降雨的原理</a></p></blockquote><h3 id="2、臭氧层"><a href="#2、臭氧层" class="headerlink" title="2、臭氧层"></a>2、臭氧层</h3><p><strong>能导致臭氧层破坏的气体：</strong>氮氧化物，氟氯烃（如二氟二氯甲烷CCl<sub>2</sub>F<sub>2​</sub>等），四氯化碳等</p><p><strong>臭氧的应用：</strong></p><ul><li>用来作为生产自来水的消毒剂</li><li>用作水果、蔬菜表面残留农药的降解剂</li><li>医用臭氧治疗仪用来治疗由淋球菌、葡萄球菌、念珠菌等引发的疾病</li></ul><blockquote><p>不可代替氧气帮助危重病人呼吸！<del>病人因吸入过多鱼腥味气体而被臭死</del></p></blockquote><h3 id="3、酸雨"><a href="#3、酸雨" class="headerlink" title="3、酸雨"></a>3、酸雨</h3><p><strong>定义：</strong>pH小于5.6的降水。</p><ul><li>”5.6“是地球上的水与大气中的二氧化碳在室温下达成溶解平衡时水的pH值。</li><li>“pH小于5.6的降水”物理意义是“已经被环境污染物（不包括二氧化碳）污染的水”</li><li>pH介于5.7~6.9之前的水属于非污染水</li></ul><p><strong>导致酸雨的大气污染物：</strong>SO<sub>2</sub>​，NO<sub>x​</sub></p><p><strong>污染物主要来源：</strong>燃烧煤，燃烧石油制品和汽车尾气</p><p><strong>包含的酸性物质：</strong>H<sub>2</sub>CO<sub>3</sub>​，​H<sub>2</sub>SO<sub>4​</sub>，HNO<sub>3</sub>​（后两者是导致降水成为酸雨的酸）</p><p><strong>我国与欧美国家酸雨主要成分的差异：</strong></p><table><thead><tr><th>地区</th><th>酸雨的主要成分</th><th align="center">产生原因</th></tr></thead><tbody><tr><td>中国</td><td>H<sub>2</sub>SO<sub>3</sub>、H<sub>2</sub>SO<sub>4</sub></td><td align="center">我国的燃料结构以煤为主，而煤中含硫，燃烧时产生的大量SO<sub>2</sub>进入大气，SO<sub>2</sub>与大气中的水相遇变成H<sub>2</sub>SO<sub>3</sub>，部分H<sub>2</sub>SO<sub>3</sub>在大气中颗粒物的催化之下氧化成H<sub>2</sub>SO<sub>4</sub>。</td></tr><tr><td>欧美</td><td>HNO<sub>3</sub></td><td align="center">发达国家的汽车过多，汽车的排气管中温度很高，在此条件下混合气体中的O<sub>2</sub>和N<sub>2</sub>部分化合成氮氧化合物进入大气，氮氧化合物在大气中与氧气、水相遇，形成了硝酸。</td></tr></tbody></table><h3 id="4、环保型融雪剂"><a href="#4、环保型融雪剂" class="headerlink" title="4、环保型融雪剂"></a>4、环保型融雪剂</h3><p><strong>原理：</strong>融雪剂溶于水后，使水的冰点降低</p><p><strong>通用融雪剂（氯化钠等无机盐）：</strong>价格便宜，货源充足</p><p><strong>环保型融雪剂：</strong>减轻对路面和桥梁中钢筋的腐蚀和对植物的伤害；融雪残留的产物可促进植物生产，实现二次利用</p><h2 id="二、绿色化学"><a href="#二、绿色化学" class="headerlink" title="二、绿色化学"></a>二、绿色化学</h2><h3 id="1、绿色化学的核心内容——原子经济性和“5R”原则"><a href="#1、绿色化学的核心内容——原子经济性和“5R”原则" class="headerlink" title="1、绿色化学的核心内容——原子经济性和“5R”原则"></a>1、绿色化学的核心内容——原子经济性和“5R”原则</h3><p><strong>原子经济性原则：</strong>充分利用反应物中的各个原子，从而既能充分利用资源又能防止污染。</p><p><strong>”5R”原则：</strong></p><ul><li>Reduction，减量使用原料，减少实验废弃物的产生和排放</li><li>Reuse，循环使用、重复使用</li><li>Recycling，回收，实现资源的回收利用，从而实现“省资源、少污染，减成本”</li><li>Regeneration，再生，变废为宝，资源和能源再利用，是减少污染的有效途径</li><li>Rejection，拒用有毒有害品，对一些无法替代又无法回收、再生和重复使用的，有毒副作用及会造成污染的原料，拒绝使用，这是杜绝污染的最根本的办法</li></ul><h2 id="三、食品化学"><a href="#三、食品化学" class="headerlink" title="三、食品化学"></a>三、食品化学</h2><h3 id="1、化学性污染"><a href="#1、化学性污染" class="headerlink" title="1、化学性污染"></a>1、化学性污染</h3><p><strong>福尔马林：</strong>有刺激性气味的无色液体。主要成分是甲醛，它是一种易溶于水的高刺激性有毒气体，具有易燃性及腐蚀性。</p><p><strong>亚硝酸盐：</strong>食入0.3～0.5克的亚硝酸盐即可引起中毒，3克导致死亡</p><blockquote><p><strong>加碘盐：</strong>加入碘酸钾</p></blockquote><p><strong>三聚氰胺：</strong>俗称密胺、蛋白精，对身体有害，不可用于食品加工或食品添加物。</p><h3 id="2、鸡蛋防变质"><a href="#2、鸡蛋防变质" class="headerlink" title="2、鸡蛋防变质"></a>2、鸡蛋防变质</h3><p><strong>石灰水贮藏法：</strong>将鸡蛋浸入石灰水内可以延长鸡蛋的保质时间。</p><p><strong>原理：</strong>石灰呈强碱性，有较强的杀菌作用；Ca(OH)<sub>2</sub>能与鸡蛋呼出的CO<sub>2</sub>反应，生成碳酸钙薄膜，起保护作用。</p><h3 id="3、豆腐"><a href="#3、豆腐" class="headerlink" title="3、豆腐"></a>3、豆腐</h3><p><strong>主要成分：</strong>蛋白质（大豆蛋白质含量非常高）</p><p><strong>传统豆腐生产的基本工艺流程：</strong>大豆——清理——浸泡——磨浆——过滤——煮浆——凝固——成型——成品</p><p><strong>凝聚剂：</strong>石膏；六水氯化镁（可以中和胶体微粒表面吸附的离子的电荷，使蛋白质分子凝聚起来得到豆腐）</p><blockquote><p>氯化钡不能作为豆腐的凝聚剂，因为钡离子会使蛋白质变性。</p></blockquote><h3 id="4、食品添加剂"><a href="#4、食品添加剂" class="headerlink" title="4、食品添加剂"></a>4、食品添加剂</h3><p><strong>主要分类：</strong>防腐剂、抗氧化剂、调味剂、增稠剂、乳化剂、保鲜剂、香料、营养强化剂等</p><p><strong>重大食品添加剂事件：</strong>苏丹红事件，瘦肉精事件，三聚氰胺事件</p><p><strong>食品添加剂必须具备的条件：</strong></p><ol><li>对人体安全无害</li><li>对食品营养成分不起破坏作用</li><li>食品添加剂必须符合国家规定的质量标准，其有害杂质不得超过允许限量</li></ol><blockquote><p>邻苯二甲酸二（2-乙基己基）酯（DEHP）是一种化工原料，多用于塑料制品的增塑剂，<mark>可增加塑料的弹性和韧性</mark>。</p></blockquote><h2 id="四、新材料"><a href="#四、新材料" class="headerlink" title="四、新材料"></a>四、新材料</h2><h3 id="1、人造骨"><a href="#1、人造骨" class="headerlink" title="1、人造骨"></a>1、人造骨</h3><ul><li><p>人造骨是一种可以替代人骨且具有生物功能的新型无机金属材料，它具有类似于人骨和天然牙的性质和结构。</p></li><li><p>人造骨可以依靠从人体体液补充某些离子形成新骨，可在骨骼接合界面发生分解、吸收、析出等反应，实现骨骼牢固结合。人造骨植入人体内需要人体中的Ca<sup>2+</sup>与PO<sub>4</sub><sup>3-</sup>离子形成新骨。</p></li><li><p>因为钛可以和人骨密切结合，新的骨头可以贴合在钛上，所以钛是最好的人造骨的材料。</p></li></ul><h2 id="五、元素与生命"><a href="#五、元素与生命" class="headerlink" title="五、元素与生命"></a>五、元素与生命</h2><h3 id="1、氡"><a href="#1、氡" class="headerlink" title="1、氡"></a>1、氡</h3><p>氡元素对应的单质是氡气，为无色、无臭、无味的惰性气体，具有放射性。氡的化学性质不活泼，不易形成化合物。氡没有已知的生物作用。因为氡是放射性气体，当人吸入体内后，氡发生衰变的阿尔法粒子可在人的呼吸系统造成辐射损伤，引发肺癌。</p><p><strong>室内环境中氡的主要来源：</strong></p><ol><li>来自于地下地基土壤。地基土壤的扩散，通过地表和墙体裂缝而进入室内。</li><li>来自于地下水。研究证明，水中氡浓度达到104贝克/立方米时，便是室内的重要氡源。</li><li>来自于室外大气。室外大气中的氡会随着室外空气进入室内。</li><li>来自天然气的燃烧。在烧天然气和液化石油气时，如果室内通风不好，其中的氡全部释放到室内。</li><li>来自于建筑材料和室内装饰材料。特别是一些矿渣砖、炉渣砖等建筑材料（通常都含有不同程度的镭）和那 些含铀高的室内装饰材料，如花岗岩和瓷砖、洁具等。</li></ol><h3 id="2、生命元素"><a href="#2、生命元素" class="headerlink" title="2、生命元素"></a>2、生命元素</h3><p>自然界存在的元素中，有20种左右是构成人体组织、维持生理功能、生化代谢所必须的，称为生命元素。按体内含量的高低可分为<mark>常量元素</mark>和<mark>微量元素</mark></p><p><strong>常量元素：</strong>含量占生物体总质量0.01%以上的元素。如氧、碳、氢、氮、磷、硫、氯、钾、钠、钙和镁。</p><p><strong>微量元素：</strong>占生物体总质量0.01%以下的元素。如铁、铜、锌、钴（Co）、锰、铬（Cr）、硒（Se）、碘、镍、氟、钼（Mo）、钒（V）、锡（Sn）、硅、锶（Sr）、硼、铷（Rb）、砷（As）等。</p><p><strong>污染元素：</strong>存在于生物体内会阻碍生物机体正常代谢过程和影响生理功能的微量元素。如汞、铅、镉（Cd）、铝等</p><h2 id="六、化学兴趣实验"><a href="#六、化学兴趣实验" class="headerlink" title="六、化学兴趣实验"></a>六、化学兴趣实验</h2><h3 id="1、铁粉在空气中燃烧"><a href="#1、铁粉在空气中燃烧" class="headerlink" title="1、铁粉在空气中燃烧"></a>1、铁粉在空气中燃烧</h3><p>铁粉与空气充分接触，可以燃烧。。。火星四射。</p><h3 id="2、盐酸与碳酸钠"><a href="#2、盐酸与碳酸钠" class="headerlink" title="2、盐酸与碳酸钠"></a>2、盐酸与碳酸钠</h3><p><strong>盐酸过量：</strong>2HCl + Na<sub>2</sub>CO<sub>3</sub> &#8594; H<sub>2</sub>O + CO<sub>2</sub>&#8593; + 2NaCl</p><p><strong>碳酸钠过量：</strong>Na<sub>2</sub>CO<sub>3</sub> + HCl  &#8594; NaHCO<sub>3</sub> + NaCl；NaHCO<sub>3</sub> + HCl &#8594; NaCl + H<sub>2</sub>O + CO<sub>2</sub>&#8593;</p><h3 id="3、电解饱和食盐水"><a href="#3、电解饱和食盐水" class="headerlink" title="3、电解饱和食盐水"></a>3、电解饱和食盐水</h3><p>见课本→_→</p><h3 id="4、向碘化钾溶液中滴入氯化铁溶液（碘化钾过量）"><a href="#4、向碘化钾溶液中滴入氯化铁溶液（碘化钾过量）" class="headerlink" title="4、向碘化钾溶液中滴入氯化铁溶液（碘化钾过量）"></a>4、向碘化钾溶液中滴入氯化铁溶液（碘化钾过量）</h3><p>2KI + 2FeCl<sub>3</sub> &#8644; I<sub>2</sub> + 2FeCl<sub>2</sub> + 2KCl</p><p><strong>证明发生<mark>可逆反应</mark>的现象：</strong></p><ol><li>证明正反应发生：能使淀粉溶液呈现蓝色（I<sub>2</sub>​)</li><li>证明逆反应发生：加入NH<sub>4</sub>SCN​试剂，溶液变为血红色（Fe<sup>3+</sup>）</li></ol><h3 id="5、化学试剂分级"><a href="#5、化学试剂分级" class="headerlink" title="5、化学试剂分级"></a>5、化学试剂分级</h3><p><strong>按纯度高低：</strong></p><table><thead><tr><th>试剂级别</th><th>级别名称</th><th>英文名称</th><th>缩写符号</th><th>标签颜色</th><th>用途</th></tr></thead><tbody><tr><td>一级</td><td>优级纯（保证试剂）</td><td>Guaranteed Reagent</td><td>G.R.</td><td>绿色</td><td>主成分含量很高、纯度很高，适用于精确分析和研究工作。</td></tr><tr><td>二级</td><td>分析纯（分析试剂）</td><td>Analytical Reagent</td><td>A.R.</td><td>红色</td><td>主成分含量很高、纯度较高，干扰杂质很低，适用于工业分析及化学实验。这个是一般实验室用的最多的等级。</td></tr><tr><td>三级</td><td>化学纯</td><td>Chemical Pure</td><td>C.P.</td><td>蓝色</td><td>主成分含量高、纯度较高，存在干扰杂质，适用于化学实验和合成制备。</td></tr><tr><td>四级</td><td>实验试剂</td><td>Laboratory Reagent</td><td>L.R.</td><td>棕黄色</td><td>主成分含量高，纯度较差，杂质含量不做选择，只适用于一般化学实验和合成制备。</td></tr></tbody></table><p>无论做化学实验或进行化学研究，试剂级别的选择都必须得当。如果选择的试剂级别过高，会造成<mark>物质资源浪费，经费开支提高</mark>；反之，若选择级别过低，则会造成<mark>过多的杂质对实验产生干扰，导致实验出现差错或失败</mark>。</p><p><strong>按用途分级：</strong></p><table><thead><tr><th>级别名称</th><th>英文名称</th><th>缩写符号</th><th>用途</th></tr></thead><tbody><tr><td>色谱纯</td><td>Gas Chromatography（气相色谱）/Liquid Chromatography（液相色谱）</td><td>G.C./L.C.</td><td>气相色谱、液相色谱分析专用。质量指标注重干扰色谱峰的杂质。主成分含量高。</td></tr><tr><td>指示剂</td><td>Indicator</td><td>I.D.</td><td>配制指示溶液用。质量指标为变色范围和变色敏感程度。</td></tr><tr><td>生物试剂</td><td>Biological Reagent</td><td>B.R.</td><td>配制生物化学检验试液和生化合成。质量指标注重生物活性杂质。可替代指示剂，可用于有机合成。</td></tr><tr><td>光谱纯</td><td>Spectrum Pure</td><td>S.P.</td><td>用于光谱分析。分别适用于分光光度计标准品、原子吸收光谱标准品、原子发射光谱标准品。</td></tr></tbody></table><h3 id="6、浓硝酸的一种实验室制法"><a href="#6、浓硝酸的一种实验室制法" class="headerlink" title="6、浓硝酸的一种实验室制法"></a>6、浓硝酸的一种实验室制法</h3><p><strong>实验装置：</strong><img src="/2021/06/18/%E5%8C%96%E5%AD%A6-%E5%BA%94%E7%94%A8%E5%8C%96%E5%AD%A6%E4%B8%8E%E6%8A%80%E8%83%BD%E7%AB%9E%E8%B5%9B%E7%9F%A5%E8%AF%86%E7%82%B9/1.png" alt loading="lazy"></p><p><strong>实验步骤：</strong>连接装置，在曲颈甑里加入30g固体硝酸钾和25mL75%的硫酸（密度1.67g/mL），小心加热。数分钟后，在用水冷却的烧瓶中收集到的液体即为浓硝酸。</p><p><strong>反应方程式：</strong>KNO<sub>3</sub> + H<sub>2</sub>SO<sub>4</sub> &#8594; HNO<sub>3</sub> + KHSO<sub>4</sub></p><p><strong>使用曲颈甑的好处：</strong>曲颈甑具有反应容器的作用，又附带导气管的作用，可以免去玻璃导管、橡皮管等连接件，使装置简单方便；由于浓硝酸可对橡皮塞、将皮管、乳胶管等起腐蚀作用，因此使用曲颈甑制得的硝酸更浓、更纯净。</p><p><strong>反应温度不宜过高：</strong>硝酸受热易分解，导致产物损失；生成的氮氧化物导致环境污染。</p><p><strong>产物带有浅黄色：</strong>硝酸中溶有少量二氧化氮。将浓硝酸略加稀释，二氧化氮转化为硝酸可使溶液褪色。但浓度会有所下降。</p><p><strong>实验装置缺点：</strong>没有交代如何防止氮氧化物的外泄。</p><h2 id="七、洗涤剂"><a href="#七、洗涤剂" class="headerlink" title="七、洗涤剂"></a>七、洗涤剂</h2><h3 id="1-合成洗涤剂​"><a href="#1-合成洗涤剂​" class="headerlink" title="1.合成洗涤剂​"></a>1.合成洗涤剂​</h3><p><strong>组成：</strong>表面活性剂，多种辅助剂</p><p><strong>基本种类：</strong>加酶洗涤剂，低磷洗涤剂，荧光增白剂，4A沸石高聚物洗涤剂</p><ul><li>酶是一种活性成分，70℃以上死亡，所以使用加酶洗涤剂，水温不能超过70℃，否则使效力降低。最好40℃。对于血迹、奶渍、汗腺分泌物及各种蛋白质食品等污垢都有着良好的清除效果</li></ul><ul><li>含磷洗涤剂对于污垢的清除十分有效，但污水会导致江河富营养化，导致水生植物疯长，污染水质。水中氧气耗尽，鱼虾死亡，水发臭。</li></ul><ul><li>荧光增白剂就是白色染料，可以吸收紫外线，并释放出蓝紫色或者蓝色有机化合物，在其中加入荧光增白剂可以提升衣服的光泽和白度，其洗涤原理是在洗涤剂中加入适量的荧光增白剂，这些增白剂会附着在衣服上，并吸收不可见紫外光，将其转化为可见光，这可以有效提升衣服的反射率。由于反射出可见光，那么反射光强度可以得到有效的增强，因此，从视觉上来看，就达到了增白的效果。另外根据光源上互补色的原理，织物含有色物质而泛黄以及经多次洗涤后织物逐渐泛黄，荧光增白剂发出的蓝色或紫色与黄色为互补色，可抵消织物原有的黄色，使之洁白。</li></ul><ul><li>4A沸石高聚物具有很强的除污功能，同时对环境的破坏性极低，对于衣物上的污垢清除效果非常好，同时在产生大量的泡沫之后，可以直接被消除消化，同时不会对人体造成伤害。</li></ul><p><strong>表面活性剂：</strong>是能使目标溶液表面张力显著下降的物质。具有固定的亲水亲油基团，在溶液的表面能定向排列。</p><ul><li>表面活性剂的分子结构具有两性：一端为<code>亲水基团</code>，另一端为<code>疏水基团</code>（<code>亲油机团</code>）；亲水基团常为极性基团（如-OH、     -COOH、-SO<sub>3</sub>H、-NH<sub>2</sub>等）；疏水基团常为非极性烃链（如8个碳原子以上烃链）。表面活性剂的这种特有结构通常称之为“<code>双亲结构</code>”（amphiphilic structure），表面活性剂分子因而也常被称作“<code>双亲分子</code>”。</li></ul><ul><li>表面活性剂分为<code>离子型表面活性剂</code>（包括<code>阳离子表面活性剂</code>与<code>阴离子表面活性剂</code>）、<code>非离子型表面活性剂</code>、<code>两性表面活性剂</code>、复配表面活性剂、其他表面活性剂等。</li></ul><p><strong>阴离子表面活性剂：</strong>在水中解离后，具有的表面活性的是阴离子。（硬脂酸，十二烷基苯磺酸钠）</p><p><strong>阳离子表面活性剂：</strong>起作用的部分是阳离子（季铵化物）</p><p><strong>两性表面活性剂：</strong>分子结构中同时具有正、负电荷集团，在不同<code>pH</code>值介质中可表现出阳离子或阴离子表面活性剂的性质（卵磷脂，氨基酸型，甜菜碱型）</p><p><strong>非离子表面活性剂：</strong>水中不电离（烷基葡糖苷（APG），脂肪酸甘油酯，脂肪酸山梨坦（司盘），聚山梨酯（吐温））</p><h3 id="2、合成洗衣粉"><a href="#2、合成洗衣粉" class="headerlink" title="2、合成洗衣粉"></a>2、合成洗衣粉</h3><p><strong>合成洗衣粉各成分的作用：</strong></p><table><thead><tr><th>成分</th><th>作用</th></tr></thead><tbody><tr><td>十二烷基苯磺酸钠</td><td>表面活性剂，起除垢作用</td></tr><tr><td>硫酸钠</td><td>防结块的填料</td></tr><tr><td>羧甲基纤维素钠</td><td>抗再沉积剂，防止污垢再沉积</td></tr><tr><td>三聚磷酸钠</td><td>①软水剂，去除Ca<sup>2+</sup>，Mg<sup>2+</sup>及重金属离子；②对脂肪微粒有分散、乳化作用；③能提高织物洗涤后的白度</td></tr><tr><td>A型沸石</td><td>软水剂，去除Ca<sup>2+</sup>，Mg<sup>2+</sup>及重金属离子</td></tr><tr><td>硅酸钠</td><td>填料，抗腐蚀作用，缓冲作用</td></tr><tr><td>过硼酸钠</td><td>起氧化、漂白、去渍作用</td></tr><tr><td>荧光增白剂</td><td>使织物增加白度</td></tr><tr><td>蛋白酶</td><td>清除血迹、奶渍、汗腺分泌物及各种蛋白质食品等污垢（不能用于洗涤丝、毛类织物）</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;应用化学与技能竞赛知识点&quot;&gt;&lt;a href=&quot;#应用化学与技能竞赛知识点&quot; class=&quot;headerlink&quot; title=&quot;应用化学与技能竞赛知识点&quot;&gt;&lt;/a&gt;应用化学与技能竞赛知识点&lt;/h1&gt;&lt;h2 id=&quot;一、环境化学&quot;&gt;&lt;a href=&quot;#一、环境化学&quot;
      
    
    </summary>
    
    
      <category term="学习笔记" scheme="http://sxdl.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="化学" scheme="http://sxdl.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%8C%96%E5%AD%A6/"/>
    
    
      <category term="笔记" scheme="http://sxdl.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="学习" scheme="http://sxdl.github.io/tags/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="应用化学" scheme="http://sxdl.github.io/tags/%E5%BA%94%E7%94%A8%E5%8C%96%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>走在这漫漫长路上</title>
    <link href="http://sxdl.github.io/2021/05/16/%E5%88%9B%E4%BD%9C-%E8%B5%B0%E5%9C%A8%E8%BF%99%E6%BC%AB%E6%BC%AB%E9%95%BF%E8%B7%AF%E4%B8%8A/"/>
    <id>http://sxdl.github.io/2021/05/16/%E5%88%9B%E4%BD%9C-%E8%B5%B0%E5%9C%A8%E8%BF%99%E6%BC%AB%E6%BC%AB%E9%95%BF%E8%B7%AF%E4%B8%8A/</id>
    <published>2021-05-16T04:24:26.000Z</published>
    <updated>2021-05-16T05:43:29.797Z</updated>
    
    <content type="html"><![CDATA[<h1 align="center"><b>走在这漫漫长路上</b></h1><p align="center"><font size="5">随苑</font></p><p><center>在没有星星的夜晚    启程</center><center>揣着白衣送我的</center><center>珍珠和羽毛</center><center>走在这漫漫长路上    是否孤独</center><center>身后的脚印</center><center>被地平线吞没</center><center>走在这漫漫长路上    是否迷惘</center><center>前方的小径</center><center>究竟通往何方</center></p><p><center>我听见    来自远方的风</center><center>轻柔的低语    清丽的歌声</center><center>拨开久积的云雾</center><center>露水在发梢凝结</center><center>群星在晴朗的夜空闪耀</center></p><p><center>我走在这漫漫长路上    长路漫漫<center><center>在前方的头顶上    极星永恒</center><center>我揣着珍珠和羽毛    身披银河</center><center>在清风环绕中</center><center>向着约定的前方</center><center>启程</center></center></center></p><p align="right">2021.05.06</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 align=&quot;center&quot;&gt;&lt;b&gt;走在这漫漫长路上&lt;/b&gt;&lt;/h1&gt;

&lt;p align=&quot;center&quot;&gt;&lt;font size=&quot;5&quot;&gt;随苑&lt;/font&gt;&lt;/p&gt;

&lt;p&gt;&lt;center&gt;在没有星星的夜晚    启程&lt;/center&gt;
&lt;center&gt;揣着白衣送我的&lt;
      
    
    </summary>
    
    
      <category term="创作" scheme="http://sxdl.github.io/categories/%E5%88%9B%E4%BD%9C/"/>
    
      <category term="诗歌" scheme="http://sxdl.github.io/categories/%E5%88%9B%E4%BD%9C/%E8%AF%97%E6%AD%8C/"/>
    
    
      <category term="诗歌" scheme="http://sxdl.github.io/tags/%E8%AF%97%E6%AD%8C/"/>
    
  </entry>
  
  <entry>
    <title>化学等级考：电化腐蚀</title>
    <link href="http://sxdl.github.io/2020/09/21/200921/"/>
    <id>http://sxdl.github.io/2020/09/21/200921/</id>
    <published>2020-09-21T13:04:08.000Z</published>
    <updated>2020-09-21T13:08:33.726Z</updated>
    
    <content type="html"><![CDATA[<h2 id><a href="#" class="headerlink" title></a></h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title&gt;&lt;/a&gt;&lt;/h2&gt;
      
    
    </summary>
    
    
      <category term="学习笔记" scheme="http://sxdl.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="化学" scheme="http://sxdl.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%8C%96%E5%AD%A6/"/>
    
    
      <category term="笔记" scheme="http://sxdl.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="学习" scheme="http://sxdl.github.io/tags/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="化学" scheme="http://sxdl.github.io/tags/%E5%8C%96%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>地理日常疑惑提问</title>
    <link href="http://sxdl.github.io/2020/09/13/%E5%9C%B0%E7%90%86%E6%97%A5%E5%B8%B8%E7%96%91%E6%83%91%E6%8F%90%E9%97%AE/"/>
    <id>http://sxdl.github.io/2020/09/13/%E5%9C%B0%E7%90%86%E6%97%A5%E5%B8%B8%E7%96%91%E6%83%91%E6%8F%90%E9%97%AE/</id>
    <published>2020-09-13T12:01:02.000Z</published>
    <updated>2020-09-13T12:48:13.626Z</updated>
    
    <content type="html"><![CDATA[<h2 id="山地海拔高，气温低的原因"><a href="#山地海拔高，气温低的原因" class="headerlink" title="山地海拔高，气温低的原因"></a>山地海拔高，气温低的原因</h2><p>​    对流层大气的热量来源于地面的长波辐射。海拔越高，大气越稀薄。白天对地面长波辐射的吸收少；晚上，由于大气稀薄，大气逆辐射弱，热量损失大，因此温度低。</p><blockquote><p>参考资料：</p><p><a href="https://baijiahao.baidu.com/s?id=1649076951448342376&amp;wfr=spider&amp;for=pc、" target="_blank" rel="noopener">https://baijiahao.baidu.com/s?id=1649076951448342376&amp;wfr=spider&amp;for=pc、</a></p><p><a href="https://zhidao.baidu.com/question/66506117.html" target="_blank" rel="noopener">https://zhidao.baidu.com/question/66506117.html</a></p></blockquote><hr><h2 id="青藏高原对我国气候的深刻影响"><a href="#青藏高原对我国气候的深刻影响" class="headerlink" title="青藏高原对我国气候的深刻影响"></a>青藏高原对我国气候的深刻影响</h2><blockquote><p><a href="http://www.360doc.com/content/19/0411/23/924893_828152288.shtml" target="_blank" rel="noopener">青藏高原对我国气候的影响</a></p><p><a href="http://www.cma.gov.cn/2011xzt/2012zhuant/20120302/2012030205/201203020501/201203/t20120306_163740.html" target="_blank" rel="noopener">我国气候的主要特征是什么？</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      持续更新
    
    </summary>
    
    
      <category term="学习笔记" scheme="http://sxdl.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="地理" scheme="http://sxdl.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%9C%B0%E7%90%86/"/>
    
    
      <category term="笔记" scheme="http://sxdl.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="学习" scheme="http://sxdl.github.io/tags/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="答疑" scheme="http://sxdl.github.io/tags/%E7%AD%94%E7%96%91/"/>
    
  </entry>
  
  <entry>
    <title>地理等级考一些不得不记的常识</title>
    <link href="http://sxdl.github.io/2020/09/08/%E5%9C%B0%E7%90%86%E7%AD%89%E7%BA%A7%E8%80%83%E4%B8%80%E4%BA%9B%E4%B8%8D%E5%BE%97%E4%B8%8D%E8%AE%B0%E7%9A%84%E5%B8%B8%E8%AF%86/"/>
    <id>http://sxdl.github.io/2020/09/08/%E5%9C%B0%E7%90%86%E7%AD%89%E7%BA%A7%E8%80%83%E4%B8%80%E4%BA%9B%E4%B8%8D%E5%BE%97%E4%B8%8D%E8%AE%B0%E7%9A%84%E5%B8%B8%E8%AF%86/</id>
    <published>2020-09-08T14:17:30.000Z</published>
    <updated>2020-09-08T16:25:52.159Z</updated>
    
    <content type="html"><![CDATA[<h2 id="我国干湿区划分"><a href="#我国干湿区划分" class="headerlink" title="我国干湿区划分"></a>我国干湿区划分</h2><table><thead><tr><th align="center"></th><th align="left">年降水量（mm）</th><th>干湿状况</th><th>分布地区</th><th align="left">植被</th><th align="left">土地利用</th></tr></thead><tbody><tr><td align="center">湿润区</td><td align="left">&gt;800</td><td>降水量&gt;蒸发量</td><td>秦岭-淮河以南、青藏高原南部、内蒙古东北部、东北三省东部</td><td align="left">森林</td><td align="left">水田农业为主</td></tr><tr><td align="center">半湿润区</td><td align="left">&gt;400</td><td>降水量&gt;蒸发量</td><td>东北平原、华北平原、黄土高原大部分、青藏高原东南部</td><td align="left">森林-草原</td><td align="left">旱地农业为主</td></tr><tr><td align="center">半干旱区</td><td align="left">&lt;400</td><td>降水量&lt;蒸发量</td><td>内蒙古高原、黄土高原的一部分、青藏高原大部分</td><td align="left">草原</td><td align="left">畜牧业，灌溉农业</td></tr><tr><td align="center">干旱区</td><td align="left">&lt;200</td><td>降水量&lt;蒸发量</td><td>新疆、内蒙古高原西部、青藏高原西北部</td><td align="left">荒漠</td><td align="left">游牧业、绿洲灌溉农业</td></tr></tbody></table><p>（补《中国干湿地区》图）</p>]]></content>
    
    <summary type="html">
    
      我一直坚持地理学习应该更注重分析现象，但考题中确实还是有些不得不记的小常识，迫不得已，迫不得已。
    
    </summary>
    
    
      <category term="学习笔记" scheme="http://sxdl.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="地理" scheme="http://sxdl.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%9C%B0%E7%90%86/"/>
    
    
      <category term="笔记" scheme="http://sxdl.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="学习" scheme="http://sxdl.github.io/tags/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="应试" scheme="http://sxdl.github.io/tags/%E5%BA%94%E8%AF%95/"/>
    
      <category term="记忆" scheme="http://sxdl.github.io/tags/%E8%AE%B0%E5%BF%86/"/>
    
  </entry>
  
  <entry>
    <title>对三价铁比二价铁更稳定的思考和延申</title>
    <link href="http://sxdl.github.io/2020/09/07/%E5%AF%B9%E4%B8%89%E4%BB%B7%E9%93%81%E6%AF%94%E4%BA%8C%E4%BB%B7%E9%93%81%E6%9B%B4%E7%A8%B3%E5%AE%9A%E7%9A%84%E6%80%9D%E8%80%83%E5%92%8C%E5%BB%B6%E7%94%B3/"/>
    <id>http://sxdl.github.io/2020/09/07/%E5%AF%B9%E4%B8%89%E4%BB%B7%E9%93%81%E6%AF%94%E4%BA%8C%E4%BB%B7%E9%93%81%E6%9B%B4%E7%A8%B3%E5%AE%9A%E7%9A%84%E6%80%9D%E8%80%83%E5%92%8C%E5%BB%B6%E7%94%B3/</id>
    <published>2020-09-07T11:45:10.000Z</published>
    <updated>2020-09-07T12:51:02.451Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>​    在学习铁元素的相关性质时，得知三价铁的化学性质比二价铁更加稳定。溶液中，二价铁离子很容易被氧化成三价铁离子。铁是26号元素，基态铁原子的电子排布式为</p><img src="https://latex.codecogs.com/svg.latex?1s^22s^22p^63s^23p^63d^64s^2" title="1s^22s^22p^63s^23p^63d^64s^2" loading="lazy"><p>根据能量最低原则，<code>4s</code>轨道能级低于<code>3d</code>轨道，因此电子会优先填充<code>4s</code>轨道。其价电子数为2。</p><h2 id="洪特规则（Hund）"><a href="#洪特规则（Hund）" class="headerlink" title="洪特规则（Hund）"></a>洪特规则（Hund）</h2><p>根据洪特规则特例，<strong>等价轨道全充满、半充满或全空的状态一般比较稳定</strong>。即具有下列电子层的原子是比较稳定的：</p><p>​    全充满<img src="https://latex.codecogs.com/svg.latex?p^6" title="p^6" loading="lazy">或<img src="https://latex.codecogs.com/svg.latex?d^{10}" title="d^{10}" loading="lazy">或<img src="https://latex.codecogs.com/svg.latex?f^{14}" title="f^{14}" loading="lazy"></p><p>​    半充满<img src="https://latex.codecogs.com/svg.latex?p^3" title="p^3" loading="lazy">或<img src="https://latex.codecogs.com/svg.latex?d^5" title="d^5" loading="lazy">或<img src="https://latex.codecogs.com/svg.latex?f^7" title="f^7" loading="lazy"></p><p>​    全空<img src="https://latex.codecogs.com/svg.latex?p^0" title="p^0" loading="lazy">或<img src="https://latex.codecogs.com/svg.latex?d^0" title="d^0" loading="lazy">或<img src="https://latex.codecogs.com/svg.latex?f^0" title="f^0" loading="lazy"></p><p>这样，我们就可以解释为什么三价铁比二价铁要稳定的原因了。三价铁离子的电子排布式为</p><img src="https://latex.codecogs.com/svg.latex?1s^22s^22p^63s^23p^63d^5" title="1s^22s^22p^63s^23p^63d^5" loading="lazy"><p>而二价铁离子的电子排布式为</p><img src="https://latex.codecogs.com/svg.latex?1s^22s^22p^63s^23p^63d^6" title="1s^22s^22p^63s^23p^63d^6" loading="lazy"><p>可以看到，三价铁离子的<code>3p</code>轨道处于半充满状态，因此比较稳定，而二价铁离子的<code>3p</code>轨道填充了6个电子，因此更容易失去1个电子而形成5电子较稳定的半充满状态。</p><h2 id="关于铜元素的常见价态"><a href="#关于铜元素的常见价态" class="headerlink" title="关于铜元素的常见价态"></a>关于铜元素的常见价态</h2><p>未完。。。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;​    在学习铁元素的相关性质时，得知三价铁的化学性质比二价铁更加稳定。溶液中，二价铁离子很容易被氧化成三价铁离子。铁是26号元素，基态铁
      
    
    </summary>
    
    
      <category term="学习笔记" scheme="http://sxdl.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="化学" scheme="http://sxdl.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%8C%96%E5%AD%A6/"/>
    
    
      <category term="笔记" scheme="http://sxdl.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="学习" scheme="http://sxdl.github.io/tags/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="结构化学" scheme="http://sxdl.github.io/tags/%E7%BB%93%E6%9E%84%E5%8C%96%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>多平台搜取图片资源——booru云图库搭建</title>
    <link href="http://sxdl.github.io/2020/08/16/200816/"/>
    <id>http://sxdl.github.io/2020/08/16/200816/</id>
    <published>2020-08-16T12:22:14.000Z</published>
    <updated>2020-08-19T10:02:27.729Z</updated>
    
    <content type="html"><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p><code>Booru</code>是一个在线图床项目，衍生的<code>Booru</code>系图库有<code>Gelbooru</code>、<code>Moebooru</code>、<code>Danbooru</code>等。比较经典的网站就如<code>konachan</code>、<code>safebooru</code>等。</p><p><img src="https://cdn.jsdelivr.net/gh/sxdl/cdn/img/posts/200816-1.png" alt="konachan" loading="lazy"></p><p><img src="https://cdn.jsdelivr.net/gh/sxdl/cdn/img/posts/200816-2.png" alt="safebooru" loading="lazy"></p><hr><h2 id="创建Booru项目"><a href="#创建Booru项目" class="headerlink" title="创建Booru项目"></a>创建Booru项目</h2><p><code>booru</code>项目<a href="https://booru.org/" target="_blank" rel="noopener">官网</a>提供了自建<code>booru</code>的途径</p><p><img src="https://cdn.jsdelivr.net/gh/sxdl/cdn/img/posts/200816-3.png" alt="booru官网" loading="lazy"></p><p>点击<code>creat your booru</code>然后根据提示一路创建就好了，需要注意一下如果需要注册多个网址，用户名和对应的邮箱不能交叉重复，简单说，就是，用户名不能重复，邮箱也最好不要。</p><blockquote><p><em>PS: 在<code>Will your booru contain only safe images?</code>这一栏，如果你不打算发布和谐图的话，最好改成<code>yes</code>，这样广告会少很多XD</em></p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/sxdl/cdn/img/posts/200816-4.png" alt="需要注意的一栏" loading="lazy"></p><p>登录你的<code>booru</code>账号，然后你可以给网站进行一些个性化配置（因为<code>Gelbooru</code>版本的问题，最好还是什么都别动）</p><p><img src="https://cdn.jsdelivr.net/gh/sxdl/cdn/img/posts/200816-6.png" alt="登录界面" loading="lazy"></p><p><img src="https://cdn.jsdelivr.net/gh/sxdl/cdn/img/posts/200816-5.png" alt="配置页面" loading="lazy"></p><hr><h2 id="上传图片"><a href="#上传图片" class="headerlink" title="上传图片"></a>上传图片</h2><p>在<code>post</code>页面最下方找到<code>add</code>，单机进入后就可以根据要求上传图片了</p><p><img src="https://cdn.jsdelivr.net/gh/sxdl/cdn/img/posts/200816-7.png" alt="add" loading="lazy"></p><p><img src="https://cdn.jsdelivr.net/gh/sxdl/cdn/img/posts/200816-8.png" alt="上传界面" loading="lazy"></p><p><strong>有些时候，受到图片大小的限制或一些其他原因，图片可能会上传失败，需要注意</strong></p><h2 id="批量上传"><a href="#批量上传" class="headerlink" title="批量上传"></a>批量上传</h2><p>官方给出的批量上传链接失效，如果有多张图片同时上传的需求，可以参考安装一些插件。</p><p><a href="https://github.com/Seedmanc/Booru-mass-uploader" target="_blank" rel="noopener">GitHub项目链接</a></p><p>如何给浏览器安装插件，这里就不赘述了，插件安装好后会在原先的网页上多出一个<code>mass upload</code>选项</p><p><img src="https://cdn.jsdelivr.net/gh/sxdl/cdn/img/posts/200816-9.png" alt="mass upload" loading="lazy"></p><p>页面加载的时候需要科学上网，因为有几个脚本文件的链接在国内无效，否则下面加载条就会一直转，加载好就可以把网络切回来了，上传的时候不需要梯子。</p><p>图片需要根据要求命名，有个问题就是文件名长度的限制，有些图片的标签太多了可能需要删除。</p><p>本人没搞懂<code>sidecar</code>文本文件上传方式，试过但是会被跳过，如果有解决的麻烦评论区救济一下。</p><blockquote><p>最后附上自己搭建的两个booru图库<a href="https://sxdl.github.io/sites/">https://sxdl.github.io/sites/</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      以最快的速度搭建一个简单的booru图库
    
    </summary>
    
    
      <category term="经验分享" scheme="http://sxdl.github.io/categories/%E7%BB%8F%E9%AA%8C%E5%88%86%E4%BA%AB/"/>
    
      <category term="booru" scheme="http://sxdl.github.io/categories/%E7%BB%8F%E9%AA%8C%E5%88%86%E4%BA%AB/booru/"/>
    
    
      <category term="booru" scheme="http://sxdl.github.io/tags/booru/"/>
    
      <category term="图床" scheme="http://sxdl.github.io/tags/%E5%9B%BE%E5%BA%8A/"/>
    
      <category term="教程" scheme="http://sxdl.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>无题</title>
    <link href="http://sxdl.github.io/2020/07/31/200731/"/>
    <id>http://sxdl.github.io/2020/07/31/200731/</id>
    <published>2020-07-31T14:34:29.000Z</published>
    <updated>2020-07-31T14:40:35.442Z</updated>
    
    <content type="html"><![CDATA[<p><strong>没有人会拿着自己的失败津津乐道，如果有，那他可能是太需要被安慰了吧。</strong></p>]]></content>
    
    <summary type="html">
    
      没有人会拿着自己的失败津津乐道，如果有，那他可能是太需要被安慰了吧
    
    </summary>
    
    
      <category term="生活记录" scheme="http://sxdl.github.io/categories/%E7%94%9F%E6%B4%BB%E8%AE%B0%E5%BD%95/"/>
    
    
      <category term="随笔" scheme="http://sxdl.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="短句" scheme="http://sxdl.github.io/tags/%E7%9F%AD%E5%8F%A5/"/>
    
  </entry>
  
  <entry>
    <title>C++获取文件夹下所有文件名</title>
    <link href="http://sxdl.github.io/2020/07/29/200729/"/>
    <id>http://sxdl.github.io/2020/07/29/200729/</id>
    <published>2020-07-29T07:05:38.000Z</published>
    <updated>2020-07-29T10:09:30.059Z</updated>
    
    <content type="html"><![CDATA[<p>因为我觉得相册发图片的方式太麻烦，准备自己加一个辅助程序，就用我比较熟悉的C++来实现，这个函数比较常用，记录以备忘。</p><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;io.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span> *to_search=<span class="string">"C:\\WINDOWS\\*.exe"</span>;    <span class="comment">//欲查找的文件，支持通配符</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">long</span> handle;                               <span class="comment">//用于查找的句柄</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> _<span class="title">finddata_t</span> <span class="title">fileinfo</span>;</span>               <span class="comment">//文件信息的结构体</span></span><br><span class="line">    handle=_findfirst(to_search,&amp;fileinfo);    <span class="comment">//第一次查找</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="number">-1</span>==handle)<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%s\n"</span>,fileinfo.name);              <span class="comment">//打印出找到的文件的文件名</span></span><br><span class="line">    <span class="keyword">while</span>(!_findnext(handle,&amp;fileinfo))        <span class="comment">//循环查找其他符合的文件，知道找不到其他的为止</span></span><br><span class="line">    &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%s\n"</span>,fileinfo.name);</span><br><span class="line">    &#125;</span><br><span class="line">    _findclose(handle);                        <span class="comment">//别忘了关闭句柄</span></span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="函数包装"><a href="#函数包装" class="headerlink" title="函数包装"></a>函数包装</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getFileName</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *to_search, <span class="keyword">char</span> output[][<span class="number">1024</span>])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">long</span> handle;                                 <span class="comment">//用于查找的句柄</span></span><br><span class="line">    <span class="keyword">int</span> counter = <span class="number">1</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> _<span class="title">finddata_t</span> <span class="title">fileinfo</span>;</span>                 <span class="comment">//文件信息的结构体</span></span><br><span class="line">    handle=_findfirst(to_search,&amp;fileinfo);      <span class="comment">//第一次查找</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="number">-1</span>==handle) <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    <span class="comment">//printf("%s\n",fileinfo.name);              //打印出找到的文件的文件名</span></span><br><span class="line">    <span class="built_in">sprintf</span>(output[<span class="number">0</span>], <span class="string">"%s"</span>, fileinfo.name);     <span class="comment">//保存找到的文件的文件名</span></span><br><span class="line"><span class="keyword">while</span>(!_findnext(handle,&amp;fileinfo))          <span class="comment">//循环查找其他符合的文件，知道找不到其他的为止</span></span><br><span class="line">    &#123;</span><br><span class="line"><span class="comment">//printf("%s\n",fileinfo.name);</span></span><br><span class="line"><span class="built_in">sprintf</span>(output[counter], <span class="string">"%s"</span>, fileinfo.name);</span><br><span class="line">counter++;</span><br><span class="line">    &#125;</span><br><span class="line">    _findclose(handle);                          <span class="comment">//别忘了关闭句柄</span></span><br><span class="line">    <span class="keyword">return</span> counter;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>参考：<a href="https://www.cnblogs.com/fnlingnzb-learner/p/6424563.html" target="_blank" rel="noopener">https://www.cnblogs.com/fnlingnzb-learner/p/6424563.html</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;因为我觉得相册发图片的方式太麻烦，准备自己加一个辅助程序，就用我比较熟悉的C++来实现，这个函数比较常用，记录以备忘。&lt;/p&gt;
&lt;h2 id=&quot;代码实现&quot;&gt;&lt;a href=&quot;#代码实现&quot; class=&quot;headerlink&quot; title=&quot;代码实现&quot;&gt;&lt;/a&gt;代码实现&lt;/h
      
    
    </summary>
    
    
      <category term="经验分享" scheme="http://sxdl.github.io/categories/%E7%BB%8F%E9%AA%8C%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="C++" scheme="http://sxdl.github.io/tags/C/"/>
    
      <category term="笔记" scheme="http://sxdl.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>相册外链图片无法正常加载的解决方案</title>
    <link href="http://sxdl.github.io/2020/07/28/%E7%9B%B8%E5%86%8C%E5%A4%96%E9%93%BE%E5%9B%BE%E7%89%87%E6%97%A0%E6%B3%95%E6%AD%A3%E5%B8%B8%E5%8A%A0%E8%BD%BD%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    <id>http://sxdl.github.io/2020/07/28/%E7%9B%B8%E5%86%8C%E5%A4%96%E9%93%BE%E5%9B%BE%E7%89%87%E6%97%A0%E6%B3%95%E6%AD%A3%E5%B8%B8%E5%8A%A0%E8%BD%BD%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</id>
    <published>2020-07-28T04:48:16.000Z</published>
    <updated>2020-07-28T05:54:29.862Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>在使用<code>yun</code>主题中的相册功能，会发现相册图片外链链接无法加载的问题，<code>url</code>正确，链接有效。</p><p><img src="/2020/07/28/%E7%9B%B8%E5%86%8C%E5%A4%96%E9%93%BE%E5%9B%BE%E7%89%87%E6%97%A0%E6%B3%95%E6%AD%A3%E5%B8%B8%E5%8A%A0%E8%BD%BD%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/1.png" alt="类似如下情况" loading="lazy"></p><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>在<code>&lt;head&gt;</code>中加入<code>&lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot;/&gt;</code>标签，重新加载图片成功。</p><p><code>yun</code>主题在<code>layout.pug</code>中对应位置加入<code>meta</code>标签即可</p><blockquote><p>参考：<a href="https://www.cnblogs.com/guozhaoxin/p/11934483.html" target="_blank" rel="noopener">https://www.cnblogs.com/guozhaoxin/p/11934483.html</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      使用yun主题相册功能无法正常加载图片
    
    </summary>
    
    
      <category term="经验分享" scheme="http://sxdl.github.io/categories/%E7%BB%8F%E9%AA%8C%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="调试" scheme="http://sxdl.github.io/tags/%E8%B0%83%E8%AF%95/"/>
    
      <category term="hexo" scheme="http://sxdl.github.io/tags/hexo/"/>
    
      <category term="相册" scheme="http://sxdl.github.io/tags/%E7%9B%B8%E5%86%8C/"/>
    
  </entry>
  
  <entry>
    <title>python爬虫——konachan壁纸</title>
    <link href="http://sxdl.github.io/2020/07/27/python%E7%88%AC%E8%99%ABkonachan%E5%A3%81%E7%BA%B8/"/>
    <id>http://sxdl.github.io/2020/07/27/python%E7%88%AC%E8%99%ABkonachan%E5%A3%81%E7%BA%B8/</id>
    <published>2020-07-27T15:50:02.000Z</published>
    <updated>2020-07-27T16:29:55.347Z</updated>
    
    <content type="html"><![CDATA[<p>前面主要都是在讲白话，大佬们请自行跳到最后的代码部分</p><h2 id="关于konachan"><a href="#关于konachan" class="headerlink" title="关于konachan"></a>关于konachan</h2><ul><li><p>这是一个动漫壁纸资源网站，你可以通过指定标签来检索你想要的图片</p></li><li><p>绅士必备知识：<code>konachan</code>的所有图片有三个<code>rating</code>：<code>save</code>,<code>questionable</code>,<code>explicit</code>,<code>save</code>是正常的图片，另外两个就是和谐图啦。K站到目前为止，总共收录将近30万张图片，但是如果通过某度的链接进入K站，只能看到<code>save</code>图，却看不到和谐图。实际上，<code>Konachan</code> 有两个网址，一个网址会屏蔽掉一些图片而另一个则是全的。应该登哪个，就不用我多说了吧[滑稽]。</p></li></ul><p><img src="/2020/07/27/python%E7%88%AC%E8%99%ABkonachan%E5%A3%81%E7%BA%B8/1.png" alt="konachan主页" loading="lazy"></p><blockquote><p><a href="https://konachan.net" target="_blank" rel="noopener">https://konachan.net</a></p><p><a href="https://konachan.com" target="_blank" rel="noopener">https://konachan.com</a></p></blockquote><ul><li>看到那个白色的输入框了吗？想搜什么直接搜就可以了。当然，<code>konachan</code>不支持中文，你得先转成罗马音或英文。</li><li>一些特殊的检索方式。如<code>id``rating:``order:</code>等，详见<a href="https://konachan.net/help/cheatsheet" target="_blank" rel="noopener">官方教程</a></li></ul><h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><p><code>konachan</code>已经了解了之后，那么我们这个爬虫将要实现什么高级的功能呢？</p><p><img src="/2020/07/27/python%E7%88%AC%E8%99%ABkonachan%E5%A3%81%E7%BA%B8/2.png" alt="目前konachan最新的save图数据" loading="lazy"></p><p>这是我现在能看到<code>konachan</code>最新的图片的数据，<code>id</code>是<code>311769</code>，发布时间在四个小时以前。emmm其实最新的图发在三个小时前，只因为它是<code>questionable</code>没有考虑进去//////</p><p>你现在一定很想看到它的内容，现在我们手上只有一个<code>id</code>，但是足够了，只要知道图片的<code>id</code>，我们就能访问它的<code>URL</code>（统一资源定位器）来找到它。只要按照下面格式输入，就能找到任意<code>id</code>对应的图片。</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https:&#x2F;&#x2F;konachan.com&#x2F;post&#x2F;show&#x2F;id</span><br></pre></td></tr></table></figure><p>其中<code>id</code>就是需要查找的图片<code>id</code></p><p>比如我们这个<code>id``311769</code>，它的位置就是</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https:&#x2F;&#x2F;konachan.com&#x2F;post&#x2F;show&#x2F;311769</span><br></pre></td></tr></table></figure><p>输入网址就可以找到它啦。</p><p>别急着右键下载，因为这并不是最清晰的，我们可以在左侧下方看到有<code>PNG</code>格式的下载地址。</p><p><img src="/2020/07/27/python%E7%88%AC%E8%99%ABkonachan%E5%A3%81%E7%BA%B8/3.png" alt loading="lazy"></p><p>如果你点进去了，你会发现它的<code>URL</code>地址是这丫子的：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https:&#x2F;&#x2F;konachan.net&#x2F;image&#x2F;767d463dbb05de49ae4c06c9f0bfa9a5&#x2F;Konachan.com%20-%20311769%20eho_%28icbm%29%20remilia_scarlet%20touhou.png</span><br></pre></td></tr></table></figure><p>???????????</p><p>这张高清图片的地址包含了它的标签，也就是说，我们没法直接通过<code>id</code>访问它。</p><p>就这？</p><p>也许如果自己动手，会丰衣足食，但是，要获取一张高清壁纸，需要三步，你得先进入图片展示页面，点击下载链接，等待页面跳转后，才能下载。emmm感觉还好，也许你输网址加上等待的时间大概有六七秒的样子，如果用爬虫的话，只要不到一秒的时间。我硬盘里现在大约有3万张壁纸，节省下来的时间就可以用来折腾网站了）））</p><p>那么我们现在需要一个程序来帮助我们完成刚刚的操作，我们只需要输入<code>id</code>然后一张高清壁纸就在文件夹下躺着啦。</p><h2 id="实现思路"><a href="#实现思路" class="headerlink" title="实现思路"></a>实现思路</h2><p>我们来理理思路，因为高清图片的地址通过简单的算法来生成直接访问，我们需要一个跳板，就是展示页面，然后在这个页面找到带有高清图片的地址，就能下载图片了。图我就不画了，应该听清楚的。</p><h3 id="连接网络"><a href="#连接网络" class="headerlink" title="连接网络"></a>连接网络</h3><p>emmm不是那个意思啦，但还是要连接的，我指的是，要让你的程序能访问网络。这就需要调用python的外部库了。网络上有很多种途径，这里我用的两个库是<code>request</code>和<code>lxml</code></p><p>先来简单的访问一下网站</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">headers = &#123;</span><br><span class="line"><span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36'</span></span><br><span class="line">&#125;  <span class="comment"># 此处修改为你个人浏览器的User-Agent</span></span><br><span class="line"></span><br><span class="line">urls = [<span class="string">'https://konachan.com/post/show/311769/'</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> url <span class="keyword">in</span> urls:</span><br><span class="line">res = requests.get(url=url, headers=headers)</span><br><span class="line"></span><br><span class="line">print(res)</span><br></pre></td></tr></table></figure><p><code>res</code>打印出来应该是这样的：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;Response [200]&gt;</span><br></pre></td></tr></table></figure><p>说明已经成功连接上了。</p><p>现在我们还看不出什么端倪，我们稍微修改一下程序，把</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">res = requests.get(url=url, headers=headers)</span><br></pre></td></tr></table></figure><p>改成</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">res = requests.get(url=url, headers=headers),text</span><br></pre></td></tr></table></figure><p>再运行一次。。。。。。。。。emmm输出比较长，但是，它成功的输出了<code>html</code>格式。你可以手动访问这个地址然后F12，不出意外应该是和网页源代码一致。</p><h3 id="定位网址"><a href="#定位网址" class="headerlink" title="定位网址"></a>定位网址</h3><p>我们现在需要在网页中精准定位图片的链接，在包含链接的文字上右键，检查，就可以定位到指定位置了</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"original-file-unchanged"</span> <span class="attr">href</span>=<span class="string">"https://konachan.com/image/767d463dbb05de49ae4c06c9f0bfa9a5/Konachan.com%20-%20311769%20eho_%28icbm%29%20remilia_scarlet%20touhou.png"</span> <span class="attr">id</span>=<span class="string">"png"</span>&gt;</span>Download PNG (1.49 MB)<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p>元素<code>a</code>对应的<code>href</code>里就有我们想找的地址。</p><p>现在我们要用程序来找到它。这里就需要用到之前提到的<code>lxml</code>库了，它可以轻松找到对应的路径，然后提取我们需要的数据。</p><p>看到后面的<code>id=&quot;png&quot;</code>了吗？非常巧的是，如果你在源代码里搜索一下，发现只有这个元素包含它。那么我们就可以轻松找到它了。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">headers = &#123;</span><br><span class="line"><span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36'</span></span><br><span class="line">&#125;  <span class="comment"># 此处修改为你个人浏览器的User-Agent</span></span><br><span class="line"></span><br><span class="line">urls = [<span class="string">'https://konachan.com/post/show/311769/'</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> url <span class="keyword">in</span> urls:</span><br><span class="line">res = requests.get(url=url, headers=headers).text</span><br><span class="line">tree = etree.HTML(res)  <span class="comment"># 最好加上</span></span><br><span class="line">second_url = tree.xpath(<span class="string">'//*[@id="png"]'</span>)  <span class="comment"># 从所有节点中匹配id为"png"的xpath</span></span><br><span class="line">print(second_url)</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">[&lt;Element a at <span class="number">0x3db0ac8</span>&gt;]</span><br></pre></td></tr></table></figure><p>这是一个<code>xpath</code>路径，看不懂没关系，但是程序的确是找到了。现在<code>second_url</code>存储的是前面我们找到的代码块，我们需要的路径在<code>href</code>下面，再从中提取就行了。</p><blockquote><p>更多关于<code>xpath</code>语法<a href="https://www.runoob.com/xpath/xpath-syntax.html" target="_blank" rel="noopener">https://www.runoob.com/xpath/xpath-syntax.html</a></p></blockquote><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">new_url = second_url.xpath(<span class="string">'./@href'</span>)[<span class="number">0</span>]  <span class="comment"># 将当前节点的 第一个 href的内容赋给new_url</span></span><br></pre></td></tr></table></figure><p>你可以把它打印出来验证一下。这样我们就得到了最终想要的路径了，只要再向网址发送一次请求就可以得到图片的二进制数据了。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">headers = &#123;</span><br><span class="line"><span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36'</span></span><br><span class="line">&#125;  <span class="comment"># 此处修改为你个人浏览器的User-Agent</span></span><br><span class="line"></span><br><span class="line">urls = [<span class="string">'https://konachan.com/post/show/311769/'</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> url <span class="keyword">in</span> urls:</span><br><span class="line">res = requests.get(url=url, headers=headers).text</span><br><span class="line">tree = etree.HTML(res)  <span class="comment"># 最好加上</span></span><br><span class="line">second_url = tree.xpath(<span class="string">'//*[@id="png"]'</span>)[<span class="number">0</span>]  <span class="comment"># 从所有节点中匹配id为"png"的xpath</span></span><br><span class="line">new_url = second_url.xpath(<span class="string">'./@href'</span>)[<span class="number">0</span>]</span><br><span class="line">data = requests.get(new_url, headers=headers)</span><br><span class="line">print(data.content)</span><br></pre></td></tr></table></figure><p>输出：</p><p>。。。自己看到控制台看吧，太长。。。</p><blockquote><p>不过貌似是十六进制表示的emmm</p></blockquote><h3 id="输出图片"><a href="#输出图片" class="headerlink" title="输出图片"></a>输出图片</h3><p>总之，你现在已经获得了一张高清壁纸的所有数据了，现在看不见是因为格式不对，我们把它输出为png格式的图片</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">headers = &#123;</span><br><span class="line"><span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36'</span></span><br><span class="line">&#125;  <span class="comment"># 此处修改为你个人浏览器的User-Agent</span></span><br><span class="line"></span><br><span class="line">urls = [<span class="string">'https://konachan.com/post/show/311769/'</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> url <span class="keyword">in</span> urls:</span><br><span class="line">res = requests.get(url=url, headers=headers).text</span><br><span class="line">tree = etree.HTML(res)  <span class="comment"># 最好加上</span></span><br><span class="line">second_url = tree.xpath(<span class="string">'//*[@id="png"]'</span>)[<span class="number">0</span>]  <span class="comment"># 从所有节点中匹配id为"png"的xpath</span></span><br><span class="line">new_url = second_url.xpath(<span class="string">'./@href'</span>)[<span class="number">0</span>]</span><br><span class="line">data = requests.get(new_url, headers=headers)</span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'./311769'</span> + <span class="string">'.png'</span>, <span class="string">'wb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">f.write(data.content)</span><br><span class="line">print(<span class="string">'311769'</span>, <span class="string">'下载成功'</span>)</span><br></pre></td></tr></table></figure><p>你现在可以在项目的文件夹下，找到你已经下好的图片了。</p><p>如果你想要更换<code>id</code>，那么稍微修改下程序，最后是这样子的，如果你想一次提取多个，加入循环就可以了</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">Kid = <span class="number">311769</span>  <span class="comment"># 在此处修改你的图片id</span></span><br><span class="line"></span><br><span class="line">headers = &#123;</span><br><span class="line"><span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36'</span></span><br><span class="line">&#125;  <span class="comment"># 此处修改为你个人浏览器的User-Agent</span></span><br><span class="line"></span><br><span class="line">urls = [<span class="string">'https://konachan.com/post/show/&#123;&#125;'</span>.format(Kid)]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> url <span class="keyword">in</span> urls:</span><br><span class="line">res = requests.get(url=url, headers=headers).text</span><br><span class="line">tree = etree.HTML(res)  <span class="comment"># 最好加上</span></span><br><span class="line">second_url = tree.xpath(<span class="string">'//*[@id="png"]'</span>)[<span class="number">0</span>]  <span class="comment"># 从所有节点中匹配id为"png"的xpath</span></span><br><span class="line">new_url = second_url.xpath(<span class="string">'./@href'</span>)[<span class="number">0</span>]</span><br><span class="line">data = requests.get(new_url, headers=headers)</span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'./&#123;&#125;'</span>.format(Kid) + <span class="string">'.png'</span>, <span class="string">'wb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">f.write(data.content)</span><br><span class="line">print(Kid, <span class="string">'下载成功'</span>)</span><br></pre></td></tr></table></figure><h2 id="一定会遇到的问题"><a href="#一定会遇到的问题" class="headerlink" title="一定会遇到的问题"></a>一定会遇到的问题</h2><p>结束了吗？还早得很呢。你可以试试<code>300108</code>这个<code>id</code>huo或者<code>300397</code>,这样的<code>id</code>有很多，你会发现，当输入这些<code>id</code>时，程序会报错。这是为什么呢？我们可以打开一个看看，拿<code>300397</code>为例，你会发现，它只有<code>jpg</code>格式的大图，没有<code>png</code>格式。所以我们的程序并不能找到<code>id=&quot;png&quot;</code>这个匹配项。</p><p><img src="/2020/07/27/python%E7%88%AC%E8%99%ABkonachan%E5%A3%81%E7%BA%B8/4.png" alt="300397的左边栏" loading="lazy"></p><p>emmm，是不是有点头大了？</p><p>解决方法嘛。。。如果你查看过网页源代码，就可以发现链接部分的<code>id=&quot;highres&quot;</code>，大可放心，只有这一个匹配项，这样的话，加一个<code>if</code>分支就行了。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">Kid = <span class="number">300108</span></span><br><span class="line"></span><br><span class="line">headers = &#123;</span><br><span class="line"><span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36'</span></span><br><span class="line">&#125;  <span class="comment"># 此处修改为你个人浏览器的User-Agent</span></span><br><span class="line"></span><br><span class="line">urls = [<span class="string">'https://konachan.com/post/show/&#123;&#125;'</span>.format(Kid)]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> url <span class="keyword">in</span> urls:</span><br><span class="line">res = requests.get(url=url, headers=headers).text</span><br><span class="line">tree = etree.HTML(res)  <span class="comment"># 最好加上</span></span><br><span class="line">second_url = tree.xpath(<span class="string">'//*[@id="png"]'</span>)</span><br><span class="line"><span class="keyword">if</span> len(second_url) == <span class="number">0</span>:</span><br><span class="line">second_url = tree.xpath(<span class="string">'//*[@id="highres"]'</span>)</span><br><span class="line"><span class="keyword">if</span> len(second_url) == <span class="number">0</span>:</span><br><span class="line">print(Kid, <span class="string">'页面不存在'</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">second_url = tree.xpath(<span class="string">'//*[@id="highres"]'</span>)[<span class="number">0</span>]</span><br><span class="line">new_url = second_url.xpath(<span class="string">'./@href'</span>)[<span class="number">0</span>]</span><br><span class="line">data = requests.get(new_url, headers=headers)</span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'./&#123;&#125;'</span>.format(Kid) + <span class="string">'.jpg'</span>, <span class="string">'wb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">f.write(data.content)</span><br><span class="line">print(Kid, <span class="string">'下载成功'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">second_url = tree.xpath(<span class="string">'//*[@id="png"]'</span>)[<span class="number">0</span>]</span><br><span class="line">new_url = second_url.xpath(<span class="string">'./@href'</span>)[<span class="number">0</span>]</span><br><span class="line">data = requests.get(new_url, headers=headers)</span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'./&#123;&#125;'</span>.format(Kid) + <span class="string">'.png'</span>, <span class="string">'wb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">f.write(data.content)</span><br><span class="line">print(Kid, <span class="string">'下载成功'</span>)</span><br></pre></td></tr></table></figure><p>这段代码顺便解决了另外一个问题，那就是有些<code>id</code>是不存在的，就是图片被删除或者更新了。单个<code>id</code>也许没什么影响，但如果你开始向我一样准备爬取<code>konachan</code>大量的图的话，这就很必要了。如果你想一次爬完全部三十万张图，也没问题，因为<code>konachan</code>没有反爬机制，但是大量的访问会让服务器吃不消，<del>所以暴力下载的代码我就不贴出来啦</del></p><h2 id="延申与改进"><a href="#延申与改进" class="headerlink" title="延申与改进"></a>延申与改进</h2><p>因为<code>konachan</code>优秀的检索机制，你可以为所欲为地爬取任何你想要的图片，你可以按人物检索，按评分检索，按日期检索，再搭配上一些奇奇怪怪的脑洞，会有更多的发现。</p>]]></content>
    
    <summary type="html">
    
      通过python爬虫实现按照id下载图片
    
    </summary>
    
    
      <category term="经验分享" scheme="http://sxdl.github.io/categories/%E7%BB%8F%E9%AA%8C%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="python" scheme="http://sxdl.github.io/tags/python/"/>
    
      <category term="爬虫" scheme="http://sxdl.github.io/tags/%E7%88%AC%E8%99%AB/"/>
    
      <category term="K站" scheme="http://sxdl.github.io/tags/K%E7%AB%99/"/>
    
  </entry>
  
  <entry>
    <title>World!</title>
    <link href="http://sxdl.github.io/2020/07/26/World/"/>
    <id>http://sxdl.github.io/2020/07/26/World/</id>
    <published>2020-07-26T14:09:17.000Z</published>
    <updated>2020-07-27T05:31:22.180Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      lalala
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>博客调教日记(一)</title>
    <link href="http://sxdl.github.io/2020/07/25/%E5%8D%9A%E5%AE%A2%E8%B0%83%E6%95%99%E6%97%A5%E8%AE%B0(%E4%B8%80)/"/>
    <id>http://sxdl.github.io/2020/07/25/%E5%8D%9A%E5%AE%A2%E8%B0%83%E6%95%99%E6%97%A5%E8%AE%B0(%E4%B8%80)/</id>
    <published>2020-07-25T13:29:36.000Z</published>
    <updated>2020-07-27T07:14:46.738Z</updated>
    
    <content type="html"><![CDATA[<p><strong>花了两天时间用hexo简单做了一个网站，刚刚修改好主题。试着发几篇博客测试一下。</strong></p><p><strong>这一篇主要研究下文章的一些格式和配置。</strong></p><a id="more"></a><h1 id="快速开始"><a href="#快速开始" class="headerlink" title="快速开始"></a><strong>快速开始</strong></h1><p>​    首先必须要搭建好你的博客，我用的是<code>hexo</code>。这是一个基于<code>nodejs</code> 的静态博客网站生成器。详细的操作<a href="https://blog.csdn.net/sinat_37781304/article/details/82729029" target="_blank" rel="noopener">在这里</a>。在完成网页基础配置之后，就摩拳擦掌准备写博客了。不管其他什么高级的问题，让我们先发一篇博客试一下。</p><h2 id="新建一个post"><a href="#新建一个post" class="headerlink" title="新建一个post"></a><strong>新建一个post</strong></h2><p>在存放你所有博客相关的文件夹下打开<code>Git Bash</code>，然后输入</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo new &quot;My New Post&quot;</span><br></pre></td></tr></table></figure><p>这里默认是<code>post</code>,然后你就可以在<code>\source\_posts\</code>文件夹下找到文件格式为<code>My New Post.md</code>的新建博客啦。</p><ul><li>更多参考<code>hexo</code>官网：<a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></li></ul><h2 id="启动服务器"><a href="#启动服务器" class="headerlink" title="启动服务器"></a><strong>启动服务器</strong></h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>你可以在浏览器中输入<code>http://localhost:4000/</code>来预览你的网站</p><ul><li>更多参考<code>hexo</code>官网：<a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></li></ul><p>当我们打开网站预览后，如果没有发生意外，你的第一篇博客就诞生啦！</p><p>接下来让我们把它们部署到你的网站上。</p><h2 id="生成静态文件"><a href="#生成静态文件" class="headerlink" title="生成静态文件"></a><strong>生成静态文件</strong></h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><ul><li>更多参考<code>hexo</code>官网：<a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></li></ul><h2 id="部署到你的网站上"><a href="#部署到你的网站上" class="headerlink" title="部署到你的网站上"></a><strong>部署到你的网站上</strong></h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><ul><li>更多参考<code>hexo</code>官网：<a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></li></ul><p>到目前为止，你已经成功将一篇没有内容只有标题的空文章发布到你的网站上了。接下来我们要给文章添加内容。</p><hr><h1 id="添加内容"><a href="#添加内容" class="headerlink" title="添加内容"></a><strong>添加内容</strong></h1><p>找到你新添加的<code>My New Post.md</code>空文章，然后用<del>各种方式</del>打开它，最好不要用自带的文本编辑器打开，当然如果你硬要这样也没什么关系。我用的是<code>VS code</code>,微软的代码编辑器，因为它可以安装各种非人类的插件，这里就不多讲了XD。总之我们打开文件以后，你应该会看到用<code>---</code>标在中间的代码</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: My New Post</span><br><span class="line">date: 2020-07-24 19:32:02</span><br><span class="line">tags:</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p><code>title</code>是我们文章的标题，<code>date</code>是创建时间。<del>（好吧，应该不用讲也能看得懂）</del></p><p>我们先不要管这些，直接换行，在下面输入一行你喜欢的话</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: My New Post</span><br><span class="line">date: 2020-07-24 19:32:02</span><br><span class="line">tags:</span><br><span class="line">---</span><br><span class="line">云外有天，年月有歌。</span><br></pre></td></tr></table></figure><p>我写的比较文艺，如果你喜欢经典的<code>Hello World！</code>那也没问题。</p><p>保存之后关闭文件，同样在<code>Git Bash</code>中输入<code>$ hexo clean</code>和<code>$ hexo server</code>等待个几秒，然后就可以在你的网站预览中发现一些变化了。</p><hr><h2 id="格式化输入"><a href="#格式化输入" class="headerlink" title="格式化输入"></a><strong>格式化输入</strong></h2><p>上面的示例中，我们只是在文章中简单加了一段文字。如何格式化输入呢？先上示例：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">无字天书</span><br></pre></td></tr></table></figure><p>你可以把这段复制到你的文章代码中去，然后就可以看到预览的效果了。在对照一下示例代码，相信聪明的你就已经明白怎么写了。反正我是不会写的，但是，</p><p>我有<code>Typora</code>,这是专门为<del>懒惰的</del>小伙伴定制的辅助软件，你可以自由舒畅地码字而不用纠结与代码的缩进，反正用它就对了。贴心的我把链接也贴出来了-&gt; <a href="https://www.typora.io/" target="_blank" rel="noopener">点我</a></p><p>至于怎么用，快捷键什么的，下好之后拉一下菜单就都有了。</p><hr><h1 id="分类和标签"><a href="#分类和标签" class="headerlink" title="分类和标签"></a>分类和标签</h1><p>当学会了如何写内容之后，你一定会跃跃欲试准备一口气写几百篇博客一夜登顶（bushi），实际上，当文章数量多起来的时候，如果没有好的分类，那么找起文章来一定是十分痛苦的。这时候，我们就需要给文章一定的分类规则了。</p><p><code>hexo</code>自带有两种分类规则，一个是<code>分类（categories）</code>，另一个是<code>标签（tags）</code>。需要注意的是，一篇文章只能属于一种<code>分类</code>，却可以添加多个<code>标签</code>。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;花了两天时间用hexo简单做了一个网站，刚刚修改好主题。试着发几篇博客测试一下。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;这一篇主要研究下文章的一些格式和配置。&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="经验分享" scheme="http://sxdl.github.io/categories/%E7%BB%8F%E9%AA%8C%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="调试" scheme="http://sxdl.github.io/tags/%E8%B0%83%E8%AF%95/"/>
    
      <category term="web前端" scheme="http://sxdl.github.io/tags/web%E5%89%8D%E7%AB%AF/"/>
    
      <category term="博客" scheme="http://sxdl.github.io/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="hexo" scheme="http://sxdl.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>My New Post</title>
    <link href="http://sxdl.github.io/2020/07/24/My-New-Post/"/>
    <id>http://sxdl.github.io/2020/07/24/My-New-Post/</id>
    <published>2020-07-24T11:32:02.000Z</published>
    <updated>2020-07-27T07:19:03.146Z</updated>
    
    <content type="html"><![CDATA[<p>云外有天，年月有歌。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;云外有天，年月有歌。&lt;/p&gt;

      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://sxdl.github.io/2020/07/24/hello-world/"/>
    <id>http://sxdl.github.io/2020/07/24/hello-world/</id>
    <published>2020-07-24T08:25:27.141Z</published>
    <updated>2020-07-27T07:15:37.236Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
